name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install core dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install --timeout 300 -r requirements.txt
    
    - name: Install development tools
      run: |
        pip install --timeout 300 pytest black flake8
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
      continue-on-error: true
    
    - name: Format check with black
      run: |
        black --check --diff . || true
      continue-on-error: true
    
    - name: Test core imports
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import google.generativeai; print('✅ Google Generative AI')"
        python -c "import pandas; print('✅ Pandas')"
        python -c "import streamlit; print('✅ Streamlit')"
        python -c "import matplotlib; print('✅ Matplotlib')"
    
    - name: Test application modules
      run: |
        python -c "import config; print('✅ Config module')"
        python -c "import data_analyzer; print('✅ DataAnalyzer module')"
        python -c "import main; print('✅ Main module')"
    
    - name: Test CLI help
      run: |
        timeout 30 python main.py --help || echo "CLI help test completed"

  quick-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Quick dependency check
      run: |
        python -m pip install --upgrade pip
        pip install google-generativeai pandas streamlit matplotlib
        python -c "import google.generativeai, pandas, streamlit, matplotlib; print('✅ Core dependencies working')"